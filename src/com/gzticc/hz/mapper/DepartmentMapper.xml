<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gzticc.hz.mapper.DepartmentMapper" >

	<!-- 查询部门的条件的sql片段 -->
	<sql id="query_department">
		<if test="departmentCustom!=null">
			<!-- ${}拼接字符串，有sql注入的维修，少用 -->
			<if test="departmentCustom.departmentName!=null and departmentCustom.departmentName !=''">
				and departmentName like concat('%',#{departmentCustom.departmentName},'%')
			</if>
			<if test="departmentCustom.departmentNo!=null and departmentCustom.departmentNo !=''">
				and departmentNo like concat('%',#{departmentCustom.departmentNo},'%')
			</if>
		</if>
	</sql>
	
	<!-- 查询部门 -->
	<!-- 
		parameterType传入包装对象(包装了查询条件)
  		resultType建议使用扩展对象
  	 -->
	<select id="queryObjs" parameterType="DepartmentQueryVo" resultType="DepartmentCustom">
		SELECT tb_department.* FROM tb_department
		<where>
			<!-- 引用sql片段 的id,如果refid指定的id不在本mapper文件中,要前边加namespace -->
			<include refid="query_department"></include>
		</where>
		order by createTime desc
		<if test="start!=null and rows!=null">
			limit #{start},#{rows}
		</if>

	</select>

	<select id="queryObj" parameterType="java.lang.String" resultType="DepartmentCustom">
		SELECT tb_department.* FROM tb_department
		<where>
			and departmentId = #{pk}
		</where>
	</select>

	<select id="queryCount" parameterType="DepartmentQueryVo" resultType="java.lang.Long">
		SELECT count(1) FROM tb_department
		<where>
			<include refid="query_department"></include>
		</where>
	</select>

	<!--添加部门-->
	<insert id="insert" parameterType="DepartmentCustom">
		insert into tb_department
			(
				departmentNo,
				departmentName,
				departmentPhone,
				status,
				createTime
			)
		values
			(
				#{departmentNo},
				#{departmentName},
				#{departmentPhone},
				#{status},
				#{createTime}
			)
	</insert>

	<!-- 修改部门 -->
	<update id="update" parameterType="DepartmentCustom">
		update tb_department
		set
			departmentNo = #{departmentNo},
			departmentName = #{departmentName},
			departmentPhone = #{departmentPhone},
			status = #{status}
		where departmentId = #{departmentId}
	</update>

	<!-- 删除部门 -->
	<delete id="delete" parameterType="DepartmentCustom">
		delete from tb_department where departmentId = #{departmentId}
	</delete>

	<!---->
	<!-- 通过主键批量删除部门-->
	<delete id="deleteList">
		delete from tb_department where departmentId in
		<foreach collection="array" open="(" close=")" separator="," item="pk">
			#{pk}
		</foreach>
	</delete>
</mapper>